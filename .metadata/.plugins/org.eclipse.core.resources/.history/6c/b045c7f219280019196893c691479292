package p1;

import java.io.*;
import java.net.*;

public class EventFactory implements Runnable{
	private boolean debug = true;
	private boolean debug2 = true;
	private int type; // 0=>Registry, 1=>Messaging Node
	private String name;
	private Integer maxConnections;
	static Integer portNumber;
	ServerSocket serverSocket = null;
	Socket[] sockets = null;
	DataInputStream[] inputStreams = null;
	DataOutputStream[] outputStreams = null;
	
	public EventFactory(int type, String name, Integer maxConnections) {
		this.type = type; // 0=>Registry, 1=>Messaging Node
		this.name = name;
		this.maxConnections = maxConnections;
		sockets = new Socket[maxConnections];
		inputStreams = new DataInputStream[maxConnections];
		outputStreams = new DataOutputStream[maxConnections];
		this.establishServerSocket();
	}
	
	private void establishServerSocket() {
		//for(int i=1025;i<=49151;i++) {
		for(int i=5000;i<=5020;i++) {
			try {
				serverSocket = new ServerSocket(i, this.maxConnections);
				this.portNumber = i;
				if(debug2) {System.out.println(this.name+": opened port number "+i);}
				break;
			} catch(IOException e) {
				if(debug2) {System.out.println(this.name+": could not use port = " + i);};
			}
		}
	}
	
	public void run() {
		Thread[] connections = new Thread[this.maxConnections];
	}
	
	private void close() {
		for(int i=0;i<this.maxConnections;i++) {
			try {
				sockets[i].close();
				inputStreams[i].close();
				outputStreams[i].close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
}

