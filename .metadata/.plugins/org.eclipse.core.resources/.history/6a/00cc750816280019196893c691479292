package p1;

public class Node implements Runnable{
	private boolean debug = true;
	private boolean debug2 = true;
	private String name;
	private String registryAddress;
	public static final EventFactory eventFactory = null;
	
	public Node(String name, String registryAddress) {
		if(debug) {System.out.println(this.name+": Establishing...");}
		this.name = name;
		this.registryAddress = registryAddress;
	}
	
	private Integer establishConnectionToRegister() {
		if(debug) {System.out.println(this.name+": Connecting to Registry...");}
		Integer portNumber = 0;
		//for(int i=1025;i<=49151;i++) {
		for(int i=5000;i<=5020;i++) {
			try {
				socketToTheRegister = new Socket(registryAddress, i);
				portNumber = i;
				break;
			} catch(IOException e) {
				if(debug2) {System.out.println(this.name+": Could not connect at port = " + i);};
			}
		}
		if(debug) {System.out.println(this.name+": Connected to Registry at port number " + portNumber);}
		return portNumber;
	}
	
	public void run(){
		System.out.println(this.name+": Up and Running!");
		this.close();
	}
	
	private void close() {
		try {
			this.socketToTheRegister.close();
			this.inputStream.close();
			this.outputStream.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
